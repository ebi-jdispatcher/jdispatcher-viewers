{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"jdispatcher-viewers","text":"<p>Job Dispatcher viewers is a TypeScript module that uses Fabric.js (based on a HTML canvas) to implement interactive visualisations, Visual Output and Functional Predictions. The app is provided as an ES module, can be used as plugin and  also as Web Components. A Node.js CLI application is also provided to generate static figures in SVG and PNG formats.</p> <p>Live Demo</p>"},{"location":"#visual-output","title":"Visual Output","text":"<p>Visual Output is a diagram visualisation for the hit sequences of sequence similarity tools (e.g.  NCBI BLAST+ and  FASTA, that highlights the region of the sequences that is matching the query sequence and provides corresponding E-values.  This currently works only with Job Dispatcher Job IDs, as it depends on the JSON output provided by the service.</p> <p></p>"},{"location":"#functional-predictions","title":"Functional Predictions","text":"<p>Functional Predictions is a diagram of the domain ranges that compose hit sequences of sequence  similarity tools (e.g. NCBI BLAST+ and FASTA. This visualisation gives a good overview of domain location vs hit/query sequence matching. Predictions are obtained from  InterPro and cover several domain databases/resources, including: Pfam, SUPERFAMILY, SMART, CATH-Gene3D, CDD, etc.</p> <p></p>"},{"location":"#colouring-and-selection-of-scores","title":"Colouring and selection of scores","text":"<p>Six colouring schemes can be selected along side scale type and score. The scale types are either <code>dynamic</code>, i.e. the scale ranges from the 'local' minimum to maximum score found in the results, or <code>fixed</code>, where the range is pre-defined based on the score being used. There is a selection of scores that can be selected, <code>E-value</code> being the default. Besides E-value, sequence <code>identity</code> and <code>similarity</code>, as well as, <code>bit score</code> can selected. The colouring schemes currently provided are: - <code>Heatmap</code>: from red to blue (multiple hues) - <code>Greyscale</code>: a grey scale (single hue) - <code>Sequential</code>: a blue scale (single hue) - <code>Divergent</code>: red to yellow to green  (multiple hues) - <code>Qualitative</code>: categorical colouring (multiple hues) - <code>NCBI BLAST+</code>: NCBI BLAST+ based categorical colouring (multiple hues)  </p>"},{"location":"#dependencies-and-installation","title":"Dependencies and Installation","text":"<p>Building the applications requires Node.js (tested with v16.16.0 and v18.7.0).  Additional requirements, are downloaded and installed automatically with npm CLI.  See full list of dependencies in package.json</p>"},{"location":"#development-server","title":"Development server","text":"<p>During development, you can simply clone this repository and install all the dependencies required to run the webpack and webpack-dev-server:</p> <pre><code>npm install\n</code></pre> <p>To play with the development server (watches for file changes), in two terminal windows in parallel, run:</p> <pre><code># runs a server at localhost:8080\nnpm run dev\n</code></pre> <pre><code># builds the package and copies index.html over to ./dist\nnpm run dev2\n</code></pre>"},{"location":"#building-the-application","title":"Building the application","text":"<p>To compile the application for production, run:</p> <pre><code>npm run build\n</code></pre>"},{"location":"#developing-the-cli","title":"Developing the CLI","text":"<p>To compile the CLI during development (watches for file changes), run:</p> <pre><code>npm run dev:cli\n</code></pre>"},{"location":"#building-the-cli","title":"Building the CLI","text":"<p>To compile the CLI for production, run:</p> <pre><code>npm run build:cli\n</code></pre>"},{"location":"#running-the-cli","title":"Running the CLI","text":"<p>Test the CLI by simply running (or passing the options <code>-h</code> or <code>--help</code>):</p> <pre><code>node --es-module-specifier-resolution=node bin/jd-viewers-cli.js\n</code></pre> <p>Testing the CLI using a <code>mock</code> jobId, which loads data from files under <code>./src/testdata</code>.</p> <pre><code>node --es-module-specifier-resolution=node bin/jd-viewers-cli.js vo -i mock_jobid-I20200317-103136-0485-5599422-np2 -o test.png -of png -v\n</code></pre> <p>Passing the same local files:</p> <pre><code>node --es-module-specifier-resolution=node bin/jd-viewers-cli.js fp -i ./src/testdata/ncbiblast.json -ix ./src/testdata/iprmc.xml -o test.svg -of svg -v\n</code></pre> <p>Passing a valid JobId (replace with a current JobId, as this one might have expired), where the data will be fetched and stored locally:</p> <pre><code>node --es-module-specifier-resolution=node bin/jd-viewers-cli.js fp -i ncbiblast-R20200602-114955-0302-11398737-np2 -o test.svg -of svg -v\n</code></pre> <p>Some rendering options can be optionally passed to the CLI, including: <code>-hits</code>, number of hits; <code>-hsps</code>, number of HSPs; and <code>-color</code>, color scheme. For example:</p> <pre><code>node --es-module-specifier-resolution=nodebin/jd-viewers-cli.js fp -i ncbiblast-R20200602-114955-0302-11398737-np2 -o test.svg -of svg -color 'ncbiblast' -hits 50 -v\n</code></pre>"},{"location":"#publishing-npm-package","title":"Publishing NPM package","text":"<p>This package has been published to NPM at  @ebi-jdispatcher/jdispatcher-viewers.</p> <pre><code># npm package under ebi-jdispatcher org\nnpm init --scope=@ebi-jdispatcher\n# testing building the package\nnpm install\n# publish to npm\nnpm publish --access public\n</code></pre>"},{"location":"#bug-tracking","title":"Bug Tracking","text":"<p>If you find any bugs or issues please log them in the issue tracker.</p>"},{"location":"#changelog","title":"Changelog","text":"<p>See CHANGELOG.md.</p>"},{"location":"#licensing","title":"Licensing","text":"<p>The European Bioinformatics Institute - EMBL-EBI, is an Intergovernmental Organization which, as part of the European Molecular Biology Laboratory family, focuses on research and services in bioinformatics.</p> <p>Apache License 2.0. See LICENSE for details.</p>"},{"location":"demo/","title":"Demo","text":"<p>This demo works with a pre-loaded example, but you can also pass a valid Job Dispatcher job ID.</p> Job ID: Generate Visual Output Generate Functional Predictions <p> </p>"},{"location":"development/","title":"jdispatcher-viewers","text":"<p>This documentation describes how to build an interactive visualization using jdispatcher-viewers and the Fabric.js library. The visualisation leverages Fabric.js objects (e.g., rectangles) to create a dynamic, customizable canvas-based experience.</p>"},{"location":"development/#overview","title":"Overview","text":"<p>Fabric.js supports features like gradient fills, object manipulation, and dynamic updates, making it suitable for applications such as biological data visualisation. Here we demonstrate how to build a small basic visualisation for viewing protein domain annotations on a sequence track.</p>"},{"location":"development/#prerequisites","title":"Prerequisites","text":"<ul> <li>Fabric.js: Tested with version 5.4.0</li> <li>TypeScript: Tested with version 4.9</li> <li>Browser: Modern browser with Canvas support</li> </ul>"},{"location":"development/#installation","title":"Installation","text":"<ol> <li>Include Fabric.js in your new project:    <pre><code>npm install fabric\n</code></pre></li> <li> <p>Likewise, you need to install jdispatcher-viewers:    <pre><code>npm install jdispatcher-viewers\n</code></pre></p> </li> <li> <p>Create wew HTML file (e.g. 'index.html') and set up a canvas element:    <pre><code>&lt;canvas id=\"canvas\" width=\"800\" height=\"600\"&gt;&lt;/canvas&gt;\n</code></pre></p> </li> <li> <p>Initialize Fabric.js in your JavaScript/TypeScript:    <pre><code>const canvas = new fabric.Canvas('canvas');\n</code></pre></p> </li> </ol>"},{"location":"development/#notes","title":"Notes","text":"<ul> <li>Ensure the canvas is re-rendered (<code>canvas.renderAll()</code>) after dynamic updates.</li> <li>Check Fabric.js documentation for advanced features like groups, animations, or filters.</li> </ul>"},{"location":"development/#api-reference","title":"API Reference","text":"<ul> <li>For a complete overview of the jdispatcher-viewers modules and utilities, check the API Docs.</li> </ul>"},{"location":"script/","title":"Script Embedding","text":""},{"location":"script/#script-embedding","title":"Script Embedding","text":"<p>jdispatcher-viweres can be used by loading the library's JavaScript and creating a new script tag.</p>"},{"location":"script/#visual-output","title":"Visual Output","text":"<p>Visual Output can be used by embedding a script tag in HTML as shown in the example below. The visualisation can be customised to some extent. TODO</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\" /&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n        &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /&gt;\n        &lt;title&gt;Visual Output - plugin&lt;/title&gt;\n        &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\" media=\"all\" /&gt;\n        &lt;script type=\"text/javascript\" src=\"https://ebi-jdispatcher.github.io/jdispatcher-viewers/dist/jd_viewers_0.1.0.bundle.min.js\" defer&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div id=\"canvas-wrapper\"&gt;\n            &lt;canvas id=\"canvas\" /&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n    &lt;script&gt;\n        document.addEventListener(\"DOMContentLoaded\", async () =&gt; {\n            // Get Sequence Similarity Search JSON URL\n            // jobId should be a valid jobId\n            const jobId = \"mock_jobid-I20200317-103136-0485-5599422-np2\";\n            const data = getJdispatcherJsonURL(jobId);\n            const sssJsonResponse = await fetchData(data);\n            const sssDataObj = dataAsType(sssJsonResponse, \"SSSResultModel\");\n\n            // Render Options\n            const options = {\n                colorScheme: \"heatmap\",\n                numberHits: 100,\n                numberHsps: 10,\n                logSkippedHsps: true,\n                canvasWrapperStroke: true,\n            };\n            // Call render method to display the viz\n            new VisualOutput(\"canvas\", sssDataObj, options).render();\n        });\n    &lt;/script&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"script/#functional-predictions","title":"Functional Predictions","text":"<p>Similarly for the Functional Predictions visualisation:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\" /&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n        &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /&gt;\n        &lt;title&gt;Functional Predictions - plugin&lt;/title&gt;\n        &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\" media=\"all\" /&gt;\n        &lt;script type=\"text/javascript\" src=\"https://ebi-jdispatcher.github.io/jdispatcher-viewers/dist/jd_viewers_0.1.0.bundle.min.js\" defer&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div id=\"canvas-wrapper\"&gt;\n            &lt;canvas id=\"canvas\" /&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n    &lt;script&gt;\n        document.addEventListener(\"DOMContentLoaded\", async () =&gt; {\n            // Get Sequence Similarity Search JSON URL\n            // jobId should be a valid jobId\n            // const jobId = \"ncbiblast-I20220810-095736-0608-24881701-np2\";\n            const jobId = \"mock_jobid-I20200317-103136-0485-5599422-np2\";\n            const data = getJdispatcherJsonURL(jobId);\n            const sssJsonResponse = await fetchData(data);\n            const sssDataObj = dataAsType(sssJsonResponse, \"SSSResultModel\");\n\n            const iprmcXmlData = validateSubmittedDbfetchInput(sssDataObj);\n            const iprmcXmlResponse = await fetchData(iprmcXmlData, \"xml\");\n            // convert XML into Flattened JSON\n            const iprmcJSONResponse = getIPRMCDataModelFlatFromXML(\n                iprmcXmlResponse\n            );\n            const iprmcDataObj = dataAsType(\n                iprmcJSONResponse,\n                \"IPRMCResultModelFlat\"\n            );\n\n            // Render Options\n            const options = {\n                colorScheme: \"heatmap\",\n                numberHits: 30,\n                canvasWrapperStroke: true,\n            };\n            // Call render method to display the viz\n            new FunctionalPredictions(\n                \"canvas\",\n                sssDataObj,\n                iprmcDataObj,\n                options\n            ).render();\n        });\n    &lt;/script&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"webcomponents/","title":"Web Components","text":""},{"location":"webcomponents/#web-components","title":"Web Components","text":"<p>jdispatcher-viweres can be used as Web Components. </p>"},{"location":"webcomponents/#visual-output","title":"Visual Output","text":"<p>Visual Output can be used directly as HTML elements as shown in the example below. The visualisation can be customised to some extent. TODO</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\" /&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n        &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /&gt;\n        &lt;title&gt;Visual Output - webcomponent&lt;/title&gt;\n        &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\" media=\"all\" /&gt;\n        &lt;script src=\"https://cdn.jsdelivr.net/npm/@webcomponents/webcomponentsjs@2.6.0/webcomponents-bundle.min.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n        &lt;script src=\"https://cdn.jsdelivr.net/npm/@webcomponents/webcomponentsjs@2.6.0/custom-elements-es5-adapter.min.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\" src=\"https://ebi-jdispatcher.github.io/jdispatcher-viewers/dist/jd_viewers_0.1.0.bundle.min.js\" defer&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;!-- JD Visual Output Web-component --&gt;\n        &lt;!-- data attribute should be a valid jobId --&gt;\n        &lt;jd-visual-output\n            data=\"mock_jobid-I20200317-103136-0485-5599422-np2\"\n            colorScheme=\"ncbiblast\"\n            scaleType=\"fixed\"\n            scoreType=\"bitscore\"\n            numberHits=\"100\"\n            numberHsps=\"10\"\n            logSkippedHsps=\"true\"\n            canvasWrapperStroke=\"true\"\n        &gt;&lt;/jd-visual-output&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"webcomponents/#functional-predictions","title":"Functional Predictions","text":"<p>Similarly for the Functional Predictions visualisation:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\" /&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n        &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /&gt;\n        &lt;title&gt;Functional Predictions - webcomponent&lt;/title&gt;\n        &lt;link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\" media=\"all\" /&gt;\n        &lt;script src=\"https://cdn.jsdelivr.net/npm/@webcomponents/webcomponentsjs@2.6.0/webcomponents-bundle.min.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n        &lt;script src=\"https://cdn.jsdelivr.net/npm/@webcomponents/webcomponentsjs@2.6.0/custom-elements-es5-adapter.min.js\" charset=\"utf-8\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\" src=\"https://ebi-jdispatcher.github.io/jdispatcher-viewers/dist/jd_viewers_0.1.0.bundle.min.js\" defer&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;!-- JD Functional Predictions Web-component --&gt;\n        &lt;!-- data attribute should be a valid jobId --&gt;\n        &lt;jd-functional-predictions\n            data=\"mock_jobid-I20200317-103136-0485-5599422-np2\"\n            colorScheme=\"ncbiblast\"\n            numberHits=\"30\"\n            canvasWrapperStroke=\"true\"\n        &gt;&lt;/jd-functional-predictions&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"}]}